package ru.kubancredit.dadata;

import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;

import javax.crypto.spec.PSource;
import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class Main {
    private static JsonParser parser = new JsonParser();
    private static Set<String > listStreets = new HashSet<>();
    public static void main(String[] args) throws IOException {

        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

        URL url = new URL("https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("POST");
        connection.setRequestProperty("Content-Type", "application/json; charset=UTF-8");
        connection.setRequestProperty("Accept", "application/json");
        connection.setRequestProperty("Authorization", "Token fbbe8f19bd9aa559d7ff1ec59228030d40f4bade");
        connection.setDoOutput(true);
        connection.setDoInput(true);

        System.out.println("Введите название улицы/фрагмент названия улицы:");
        String inputAddress = reader.readLine();
        String jsonInputString = "{ \"query\": \"Краснодар " +
                inputAddress +
                "\" }";






        JsonObject jsonObject = (JsonObject)parser.parse(jsonInputString);
        OutputStreamWriter wr = new OutputStreamWriter(connection.getOutputStream());
//        System.out.println(jsonObject.toString());
        wr.write(jsonObject.toString());
        wr.flush();

        StringBuilder response = new StringBuilder();
        try(BufferedReader br = new BufferedReader(
                new InputStreamReader(connection.getInputStream(), "utf-8"))) {

            String responseLine = null;
            while ((responseLine = br.readLine()) != null) {
                response.append(responseLine.trim());
            }
        }
        JsonObject jsonResponse = (JsonObject) parser.parse(response.toString());
//        System.out.println(jsonResponse);
        JsonArray arr = jsonResponse.getAsJsonArray("suggestions");
       int arrSize = arr.size();
//        System.out.println(arrSize);
        for(int i = 0; i < arrSize; i++) {
            JsonObject data = (JsonObject) arr.get(i);
            JsonObject obdata = (JsonObject) data.getAsJsonObject("data");
            String street = String.valueOf(obdata.get("street_with_type"));
//            System.out.println(street);
            listStreets.add(street);
        }
        System.out.println("Количество найденных улиц: " + listStreets.size());
        System.out.println("Список найденных улиц: ");

        for(String street : listStreets){
            System.out.println(street);
        }



//        -d '{ "query": "москва хабар" }' \
    }
}














<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>untitled1</artifactId>
    <version>1.0-SNAPSHOT</version>
    <dependencies>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
        </dependency>
    </dependencies>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
    </properties>

</project>


         private static String URL;

        public static HttpURLConnection getConnection(String u) throws IOException {
        URL url = new URL(u);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();